#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$DIR/config-common.sh"

if [[ "$1" == "bootstrap" ]];then
  cd $DIR
  git submodule init

  cd fuchsia-cpp-gn-sdk && ./scripts/setup-and-test.sh && cd ../

  ./flutter/bin/flutter precache --fuchsia --all-platforms

  exit
fi

if [[ "$1" == "dir" ]];then
  echo $DIR
  exit
fi

if [[ "$1" == "readme" ]];then
  cd $DIR
  less README.md
  exit
fi

if [[ "$1" == "update" ]];then
  cd $DIR
  git submodule update --init --recursive
  git pull
  exit
fi

if [[ "$1" == "fuchsia" ]];then
  "$DIR/fuchsia-cpp-gn-sdk/third_party/fuchsia-sdk/bin/$2.sh" "${@:3}"
  exit
fi

if [[ "$1" == "ffx" ]]; then
    "$DIR/fuchsia-cpp-gn-sdk/third_party/fuchsia-sdk/tools/x64/ffx" "${@:2}"
    exit
fi

if [[ "$1" == "flutter" ]];then
  if [[ -n "$USE_MODIFIED_FLUTTER" ]]; then
    PUB_CACHE="$DIR/.pub-cache" "$DIR/flutter/bin/cache/dart-sdk/bin/dart" \
      "$DIR/flutter/packages/flutter_tools/bin/flutter_tools.dart" \
      "${@:2}"
  else
    PUB_CACHE="$DIR/.pub-cache" "$DIR/flutter/bin/flutter" \
      "${@:2}"
  fi
  exit
fi



show_help(){
cat << EOF
usage: flutterfx

    bootstrap: init submodule and download required artifacts
    update: update this repo and submodules
    fuchsia <fserve|fpave|fserve-remote|fdevtools|fssh|fcp|femu|fpublish|fconfig|femu-exec-wrapper>: run <command> in the fuchsia sdk
    flutter <command>: run <command> in the flutter sdk
    readme: show the readme file
    help: display this message
EOF
}

if [[ "$1" == "help" ]];then
  show_help
  exit
fi

show_help
